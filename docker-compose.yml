services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: ewlarson/ogm-api:0.1.1
    container_name: ogm-api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@paradedb:5432/geoblacklight_development
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_INDEX=geoblacklight
      - LOG_PATH=/app/logs
      - APPLICATION_URL=http://localhost:8000
    ports:
      - "8000:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      paradedb:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: data-api-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  paradedb:
    image: paradedb/paradedb:latest
    container_name: data-api-paradedb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geoblacklight_development
    ports:
      - "2345:5432"
    volumes:
      - paradedb-data:/var/lib/postgresql/data
    networks:
      - elastic

volumes:
  elasticsearch-data:
  paradedb-data:

networks:
  elastic:
    driver: bridge 